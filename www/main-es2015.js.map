{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./api-flights/api.module.ts","./api-flights/api/flights.service.ts","./api-flights/configuration.ts","./api-flights/encoder.ts","./api-flights/variables.ts","./api-locations/api.module.ts","./api-locations/api/locations.service.ts","./api-locations/configuration.ts","./api-locations/encoder.ts","./api-locations/variables.ts","./api-safety/api.module.ts","./api-safety/api/safety.service.ts","./api-safety/api/security.service.ts","./api-safety/configuration.ts","./api-safety/encoder.ts","./api-safety/variables.ts","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/interceptors/oauth.interceptor.ts","./src/app/mocks/flights-search.ts","./src/app/mocks/locations-search.ts","./src/app/mocks/safety-search.ts","./src/app/mocks/search-params.ts","./src/app/modals/database/database.component.ts","./src/app/modals/settings/settings.component.ts","./src/app/pipes/moment.pipe.ts","./src/app/services/alert.service.ts","./src/app/services/amadeus.service.ts","./src/app/services/database.service.ts","./src/app/services/error-handler.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { Configuration } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\n\nimport { FlightsService } from './api/flights.service';\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers: [\n    FlightsService ]\n})\nexport class ApiModule {\n    public static forRoot(configurationFactory: () => Configuration): ModuleWithProviders {\n        return {\n            ngModule: ApiModule,\n            providers: [ { provide: Configuration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: ApiModule,\n                 @Optional() http: HttpClient) {\n        if (parentModule) {\n            throw new Error('ApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n    }\n}\n","/**\n * Flight Offers Search\n *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).\n *\n * OpenAPI spec version: 2.3.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs/Observable';\n\nimport { Error400 } from '../model/error400';\nimport { Error500 } from '../model/error500';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class FlightsService {\n\n    protected basePath = 'https://test.api.amadeus.com/v2';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Return list of Flight Offers based on searching criteria.\n     * \n     * @param originLocationCode city/airport [IATA code](http://www.iata.org/publications/Pages/code-search.aspx) from which the traveler will depart, e.g. BOS for Boston\n     * @param destinationLocationCode city/airport [IATA code](http://www.iata.org/publications/Pages/code-search.aspx) to which the traveler is going, e.g. PAR for Paris\n     * @param departureDate the date on which the traveler will depart from the origin to go to the destination. Dates are specified in the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-DD format, e.g. 2017-12-25\n     * @param returnDate the date on which the traveler will depart from the destination to return to the origin. If this parameter is not specified, only one-way itineraries are found. If this parameter is specified, only round-trip itineraries are found. Dates are specified in the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-DD format, e.g. 2018-02-28\n     * @param adults the number of adult travelers (age 12 or older on date of departure).\n     * @param max maximum number of flight offers to return. If specified, the value should be greater than or equal to 1\n     * @param children the number of child travelers (older than age 2 and younger than age 12 on date of departure) who will each have their own separate seat. If specified, this number should be greater than or equal to 0\n     * @param infants the number of infant travelers (whose age is less or equal to 2 on date of departure). Infants travel on the lap of an adult traveler, and thus the number of infants must not exceed the number of adults. If specified, this number should be greater than or equal to 0\n     * @param travelClass most of the flight time should be spent in a cabin of this quality or higher. The accepted travel class is economy, premium economy, business or first class. If no travel class is specified, the search considers any travel class\n     * @param includedAirlineCodes This option ensures that the system will only consider these airlines. This can not be cumulated with parameter excludedAirlineCodes.  Airlines are specified as [IATA airline codes](http://www.iata.org/publications/Pages/code-search.aspx) and are comma-separated, e.g. 6X,7X,8X \n     * @param excludedAirlineCodes This option ensures that the system will ignore these airlines. This can not be cumulated with parameter includedAirlineCodes.  Airlines are specified as [IATA airline codes](http://www.iata.org/publications/Pages/code-search.aspx) and are comma-separated, e.g. 6X,7X,8X \n     * @param nonStop if set to true, the search will find only flights going from the origin to the destination with no stop in between\n     * @param currencyCode the preferred currency for the flight offers. Currency is specified in the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format, e.g. EUR for Euro\n     * @param maxPrice maximum price per traveler. By default, no limit is applied. If specified, the value should be a positive number with no decimals\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFlightOffers(originLocationCode: string, destinationLocationCode: string, departureDate: string, returnDate: string, adults: number, max: number, children?: number, infants?: number, travelClass?: 'ECONOMY' | 'PREMIUM_ECONOMY' | 'BUSINESS' | 'FIRST', includedAirlineCodes?: string, excludedAirlineCodes?: string, nonStop?: boolean, currencyCode?: string, maxPrice?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getFlightOffers(originLocationCode: string, destinationLocationCode: string, departureDate: string, returnDate: string, adults: number, max: number, children?: number, infants?: number, travelClass?: 'ECONOMY' | 'PREMIUM_ECONOMY' | 'BUSINESS' | 'FIRST', includedAirlineCodes?: string, excludedAirlineCodes?: string, nonStop?: boolean, currencyCode?: string, maxPrice?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getFlightOffers(originLocationCode: string, destinationLocationCode: string, departureDate: string, returnDate: string, adults: number, max: number, children?: number, infants?: number, travelClass?: 'ECONOMY' | 'PREMIUM_ECONOMY' | 'BUSINESS' | 'FIRST', includedAirlineCodes?: string, excludedAirlineCodes?: string, nonStop?: boolean, currencyCode?: string, maxPrice?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getFlightOffers(originLocationCode: string, destinationLocationCode: string, departureDate: string, returnDate: string, adults: number, max: number, children?: number, infants?: number, travelClass?: 'ECONOMY' | 'PREMIUM_ECONOMY' | 'BUSINESS' | 'FIRST', includedAirlineCodes?: string, excludedAirlineCodes?: string, nonStop?: boolean, currencyCode?: string, maxPrice?: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (originLocationCode === null || originLocationCode === undefined) {\n            throw new Error('Required parameter originLocationCode was null or undefined when calling getFlightOffers.');\n        }\n\n        if (destinationLocationCode === null || destinationLocationCode === undefined) {\n            throw new Error('Required parameter destinationLocationCode was null or undefined when calling getFlightOffers.');\n        }\n\n        if (departureDate === null || departureDate === undefined) {\n            throw new Error('Required parameter departureDate was null or undefined when calling getFlightOffers.');\n        }\n\n        if (returnDate === null || returnDate === undefined) {\n            throw new Error('Required parameter returnDate was null or undefined when calling getFlightOffers.');\n        }\n\n        if (adults === null || adults === undefined) {\n            throw new Error('Required parameter adults was null or undefined when calling getFlightOffers.');\n        }\n\n        if (max === null || max === undefined) {\n            throw new Error('Required parameter max was null or undefined when calling getFlightOffers.');\n        }\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (originLocationCode !== undefined && originLocationCode !== null) {\n            queryParameters = queryParameters.set('originLocationCode', <any>originLocationCode);\n        }\n        if (destinationLocationCode !== undefined && destinationLocationCode !== null) {\n            queryParameters = queryParameters.set('destinationLocationCode', <any>destinationLocationCode);\n        }\n        if (departureDate !== undefined && departureDate !== null) {\n            queryParameters = queryParameters.set('departureDate', <any>departureDate);\n        }\n        if (returnDate !== undefined && returnDate !== null) {\n            queryParameters = queryParameters.set('returnDate', <any>returnDate);\n        }\n        if (adults !== undefined && adults !== null) {\n            queryParameters = queryParameters.set('adults', <any>adults);\n        }\n        if (max !== undefined && max !== null) {\n            queryParameters = queryParameters.set('max', <any>max);\n        }\n        if (children !== undefined && children !== null) {\n            queryParameters = queryParameters.set('children', <any>children);\n        }\n        if (infants !== undefined && infants !== null) {\n            queryParameters = queryParameters.set('infants', <any>infants);\n        }\n        if (travelClass !== undefined && travelClass !== null) {\n            queryParameters = queryParameters.set('travelClass', <any>travelClass);\n        }\n        if (includedAirlineCodes !== undefined && includedAirlineCodes !== null) {\n            queryParameters = queryParameters.set('includedAirlineCodes', <any>includedAirlineCodes);\n        }\n        if (excludedAirlineCodes !== undefined && excludedAirlineCodes !== null) {\n            queryParameters = queryParameters.set('excludedAirlineCodes', <any>excludedAirlineCodes);\n        }\n        if (nonStop !== undefined && nonStop !== null) {\n            queryParameters = queryParameters.set('nonStop', <any>nonStop);\n        }\n        if (currencyCode !== undefined && currencyCode !== null) {\n            queryParameters = queryParameters.set('currencyCode', <any>currencyCode);\n        }\n        if (maxPrice !== undefined && maxPrice !== null) {\n            queryParameters = queryParameters.set('maxPrice', <any>maxPrice);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/vnd.amadeus+json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/vnd.amadeus+json'\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}/shopping/flight-offers`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","export interface ConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n}\n\nexport class Configuration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n\n    constructor(configurationParameters: ConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length == 0) {\n            return undefined;\n        }\n\n        let type = contentTypes.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length == 0) {\n            return undefined;\n        }\n\n        let type = accepts.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n}\n","    import { HttpUrlEncodingCodec } from '@angular/common/http';\n\n/**\n* CustomHttpUrlEncodingCodec\n* Fix plus sign (+) not encoding, so sent as blank space\n* See: https://github.com/angular/angular/issues/11058#issuecomment-247367318\n*/\nexport class CustomHttpUrlEncodingCodec extends HttpUrlEncodingCodec {\n    encodeKey(k: string): string {\n        k = super.encodeKey(k);\n        return k.replace(/\\+/gi, '%2B');\n    }\n    encodeValue(v: string): string {\n        v = super.encodeValue(v);\n        return v.replace(/\\+/gi, '%2B');\n    }\n}\n\n","import { InjectionToken } from '@angular/core';\n\nexport const BASE_PATH = new InjectionToken<string>('basePath');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { Configuration } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\n\nimport { LocationsService } from './api/locations.service';\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers: [\n    LocationsService ]\n})\nexport class ApiModule {\n    public static forRoot(configurationFactory: () => Configuration): ModuleWithProviders {\n        return {\n            ngModule: ApiModule,\n            providers: [ { provide: Configuration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: ApiModule,\n                 @Optional() http: HttpClient) {\n        if (parentModule) {\n            throw new Error('ApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n    }\n}\n","/**\n * Airport & City Search\n *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, in test this API only contains data from the United States, Spain, United Kingdom, Germany and India. \n *\n * OpenAPI spec version: 1.2.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs/Observable';\n\nimport { Error400 } from '../model/error400';\nimport { Error500 } from '../model/error500';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class LocationsService {\n\n    protected basePath = 'https://test.api.amadeus.com/v1';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Returns a list of airports and cities matching a given keyword.\n     * \n     * @param subType sub type of the location (AIRPORT and/or CITY)\n     * @param keyword keyword that should represent the start of a word in a city or airport name or code\n     * @param countryCode Country code of the location using [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code format (e.g. US).\n     * @param pageLimit maximum items in one page\n     * @param pageOffset start index of the requested page\n     * @param sort defines on which attribute the sorting will be done: * analytics.travelers.score - sort by the number of travelers by airport or city, the airports and cities with the highest traffic are on top of the results \n     * @param view select the level of information of the reply: * LIGHT - Gives only the IATACode, name, detailedName, cityName and countryName * FULL - Adds on top of the LIGHT information the timeZoneOffset, geocode, detailed address and travelers.score default option is FULL \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAirportCitySearch(subType: Array<'AIRPORT' | 'CITY'>, keyword: string, countryCode?: string, pageLimit?: number, pageOffset?: number, sort?: 'analytics.travelers.score', view?: 'LIGHT' | 'FULL', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getAirportCitySearch(subType: Array<'AIRPORT' | 'CITY'>, keyword: string, countryCode?: string, pageLimit?: number, pageOffset?: number, sort?: 'analytics.travelers.score', view?: 'LIGHT' | 'FULL', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getAirportCitySearch(subType: Array<'AIRPORT' | 'CITY'>, keyword: string, countryCode?: string, pageLimit?: number, pageOffset?: number, sort?: 'analytics.travelers.score', view?: 'LIGHT' | 'FULL', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getAirportCitySearch(subType: Array<'AIRPORT' | 'CITY'>, keyword: string, countryCode?: string, pageLimit?: number, pageOffset?: number, sort?: 'analytics.travelers.score', view?: 'LIGHT' | 'FULL', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (subType === null || subType === undefined) {\n            throw new Error('Required parameter subType was null or undefined when calling getAirportCitySearch.');\n        }\n\n        if (keyword === null || keyword === undefined) {\n            throw new Error('Required parameter keyword was null or undefined when calling getAirportCitySearch.');\n        }\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (subType) {\n            queryParameters = queryParameters.set('subType', subType.join(COLLECTION_FORMATS['csv']));\n        }\n        if (keyword !== undefined && keyword !== null) {\n            queryParameters = queryParameters.set('keyword', <any>keyword);\n        }\n        if (countryCode !== undefined && countryCode !== null) {\n            queryParameters = queryParameters.set('countryCode', <any>countryCode);\n        }\n        if (pageLimit !== undefined && pageLimit !== null) {\n            queryParameters = queryParameters.set('page[limit]', <any>pageLimit);\n        }\n        if (pageOffset !== undefined && pageOffset !== null) {\n            queryParameters = queryParameters.set('page[offset]', <any>pageOffset);\n        }\n        if (sort !== undefined && sort !== null) {\n            queryParameters = queryParameters.set('sort', <any>sort);\n        }\n        if (view !== undefined && view !== null) {\n            queryParameters = queryParameters.set('view', <any>view);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/vnd.amadeus+json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/vnd.amadeus+json'\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}/reference-data/locations`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","export interface ConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n}\n\nexport class Configuration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n\n    constructor(configurationParameters: ConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length == 0) {\n            return undefined;\n        }\n\n        let type = contentTypes.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length == 0) {\n            return undefined;\n        }\n\n        let type = accepts.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n}\n","    import { HttpUrlEncodingCodec } from '@angular/common/http';\n\n/**\n* CustomHttpUrlEncodingCodec\n* Fix plus sign (+) not encoding, so sent as blank space\n* See: https://github.com/angular/angular/issues/11058#issuecomment-247367318\n*/\nexport class CustomHttpUrlEncodingCodec extends HttpUrlEncodingCodec {\n    encodeKey(k: string): string {\n        k = super.encodeKey(k);\n        return k.replace(/\\+/gi, '%2B');\n    }\n    encodeValue(v: string): string {\n        v = super.encodeValue(v);\n        return v.replace(/\\+/gi, '%2B');\n    }\n}\n\n","import { InjectionToken } from '@angular/core';\n\nexport const BASE_PATH = new InjectionToken<string>('basePath');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { Configuration } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\n\nimport { SafetyService } from './api/safety.service';\nimport { SecurityService } from './api/security.service';\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers: [\n    SafetyService,\n    SecurityService ]\n})\nexport class ApiModule {\n    public static forRoot(configurationFactory: () => Configuration): ModuleWithProviders {\n        return {\n            ngModule: ApiModule,\n            providers: [ { provide: Configuration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: ApiModule,\n                 @Optional() http: HttpClient) {\n        if (parentModule) {\n            throw new Error('ApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n    }\n}\n","/**\n * Safe Place and Authorization\n *  This API incorporates Auth flow to obtain access token. For more details visit **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization)**.     Please also be aware that our test environment is based on a subset of the production, this API in test only returns a few selected cities. You can find the list in our **[data collection](https://github.com/amadeus4dev/data-collection)**.\n *\n * OpenAPI spec version: 1.0.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs/Observable';\n\nimport { Error400 } from '../model/error400';\nimport { Error500 } from '../model/error500';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class SafetyService {\n\n    protected basePath = 'https://test.api.amadeus.com/v1';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Returns safety rating for a given location and radius.\n     * \n     * @param latitude Latitude (decimal coordinates)\n     * @param longitude Longitude (decimal coordinates)\n     * @param radius radius of the search in Kilometer. Can be from 0 to 20, default value is 1 Km.\n     * @param pageLimit maximum items in one page\n     * @param pageOffset start index of the requested page\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSafetyRanking(latitude: number, longitude: number, radius?: number, pageLimit?: number, pageOffset?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getSafetyRanking(latitude: number, longitude: number, radius?: number, pageLimit?: number, pageOffset?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getSafetyRanking(latitude: number, longitude: number, radius?: number, pageLimit?: number, pageOffset?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getSafetyRanking(latitude: number, longitude: number, radius?: number, pageLimit?: number, pageOffset?: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (latitude === null || latitude === undefined) {\n            throw new Error('Required parameter latitude was null or undefined when calling getSafetyRanking.');\n        }\n\n        if (longitude === null || longitude === undefined) {\n            throw new Error('Required parameter longitude was null or undefined when calling getSafetyRanking.');\n        }\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (latitude !== undefined && latitude !== null) {\n            queryParameters = queryParameters.set('latitude', <any>latitude);\n        }\n        if (longitude !== undefined && longitude !== null) {\n            queryParameters = queryParameters.set('longitude', <any>longitude);\n        }\n        if (radius !== undefined && radius !== null) {\n            queryParameters = queryParameters.set('radius', <any>radius);\n        }\n        if (pageLimit !== undefined && pageLimit !== null) {\n            queryParameters = queryParameters.set('page[limit]', <any>pageLimit);\n        }\n        if (pageOffset !== undefined && pageOffset !== null) {\n            queryParameters = queryParameters.set('page[offset]', <any>pageOffset);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/vnd.amadeus+json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/vnd.amadeus+json'\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}/safety/safety-rated-locations`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Safe Place and Authorization\n *  This API incorporates Auth flow to obtain access token. For more details visit **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization)**.     Please also be aware that our test environment is based on a subset of the production, this API in test only returns a few selected cities. You can find the list in our **[data collection](https://github.com/amadeus4dev/data-collection)**.\n *\n * OpenAPI spec version: 1.0.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs/Observable';\n\nimport { AccessDetails } from '../model/accessDetails';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class SecurityService {\n\n    protected basePath = 'https://test.api.amadeus.com/v1';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Access token is required to use Amadeus APIs\n     * \n     * @param grantType Grant type is required to obtain access token. Default value is client_credentials\n     * @param clientId API Key. Both API Key and API Secret were provided to you when you created your application in the portal.\n     * @param clientSecret API Secret. Both API Key and API Secret were provided to you when you created your application in the portal.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAccessToken(grantType: string, clientId: string, clientSecret: string, observe?: 'body', reportProgress?: boolean): Observable<AccessDetails>;\n    public getAccessToken(grantType: string, clientId: string, clientSecret: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<AccessDetails>>;\n    public getAccessToken(grantType: string, clientId: string, clientSecret: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<AccessDetails>>;\n    public getAccessToken(grantType: string, clientId: string, clientSecret: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (grantType === null || grantType === undefined) {\n            throw new Error('Required parameter grantType was null or undefined when calling getAccessToken.');\n        }\n\n        if (clientId === null || clientId === undefined) {\n            throw new Error('Required parameter clientId was null or undefined when calling getAccessToken.');\n        }\n\n        if (clientSecret === null || clientSecret === undefined) {\n            throw new Error('Required parameter clientSecret was null or undefined when calling getAccessToken.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/x-www-form-urlencoded'\n        ];\n\n        const canConsumeForm = this.canConsumeForm(consumes);\n\n        let formParams: { append(param: string, value: any): void | HttpParams; };\n        let useForm = false;\n        let convertFormParamsToString = false;\n        if (useForm) {\n            formParams = new FormData();\n        } else {\n            formParams = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        }\n\n        if (grantType !== undefined) {\n            formParams = formParams.append('grant_type', <any>grantType) || formParams;\n        }\n        if (clientId !== undefined) {\n            formParams = formParams.append('client_id', <any>clientId) || formParams;\n        }\n        if (clientSecret !== undefined) {\n            formParams = formParams.append('client_secret', <any>clientSecret) || formParams;\n        }\n\n        return this.httpClient.post<AccessDetails>(`${this.basePath}/security/oauth2/token`,\n            convertFormParamsToString ? formParams.toString() : formParams,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","export interface ConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n}\n\nexport class Configuration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n\n    constructor(configurationParameters: ConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length == 0) {\n            return undefined;\n        }\n\n        let type = contentTypes.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length == 0) {\n            return undefined;\n        }\n\n        let type = accepts.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n}\n","    import { HttpUrlEncodingCodec } from '@angular/common/http';\n\n/**\n* CustomHttpUrlEncodingCodec\n* Fix plus sign (+) not encoding, so sent as blank space\n* See: https://github.com/angular/angular/issues/11058#issuecomment-247367318\n*/\nexport class CustomHttpUrlEncodingCodec extends HttpUrlEncodingCodec {\n    encodeKey(k: string): string {\n        k = super.encodeKey(k);\n        return k.replace(/\\+/gi, '%2B');\n    }\n    encodeValue(v: string): string {\n        v = super.encodeValue(v);\n        return v.replace(/\\+/gi, '%2B');\n    }\n}\n\n","import { InjectionToken } from '@angular/core';\n\nexport const BASE_PATH = new InjectionToken<string>('basePath');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","<!-- application header -->\n<mat-toolbar color=\"primary\">\n  <span>AirTravel demo application</span>\n  <span class=\"toolbar-spacer\"></span>\n  <button mat-button aria-label=\"Database modal\" (click)=\"openDatabaseDialog()\" *ngIf=\"databaseApi.verifyDbLogs()\">\n    <mat-icon>storage</mat-icon>\n  </button>\n  <button mat-button aria-label=\"Settings modal\" (click)=\"openSettingsDialog()\">\n    <mat-icon>settings</mat-icon>\n  </button>\n</mat-toolbar>\n<!-- end of application header -->\n\n\n<div class=\"bounds\">\n\n  <!-- flights search input panel -->\n  <div class=\"selector-wrapper\" fxLayout=\"row\" fxLayout.xs=\"column\" fxFlexFill>\n\n    <div fxFlex=\"100\" class=\"sec1\">\n\n      <mat-form-field appearance=\"standard\">\n        <mat-label>Departing from?</mat-label>\n        <input matInput placeholder=\"Chicago or Barcelona\" [disabled]=\"disableEdit\"\n          [(ngModel)]=\"flightsQuery.originLocationCode\" (change)=\"validateQuery()\">\n        <mat-icon matSuffix inline>flight_takeoff</mat-icon>\n        <mat-hint>City name</mat-hint>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"standard\">\n        <mat-label>Going to?</mat-label>\n        <input matInput placeholder=\"New York or London\" [disabled]=\"disableEdit\"\n          [(ngModel)]=\"flightsQuery.destinationLocationCode\" (change)=\"validateQuery()\">\n        <mat-icon matSuffix inline>flight_land</mat-icon>\n        <mat-hint>City name</mat-hint>\n      </mat-form-field>\n\n      <mat-form-field class=\"date-picker\">\n        <mat-label>Departing</mat-label>\n        <input matInput [matDatepicker]=\"picker1\" [disabled]=\"disableEdit\" [(ngModel)]=\"flightsQuery.departureDate\"\n          [min]=\"minDepartureDate\" (dateChange)=\"validateQuery()\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n        <mat-datepicker #picker1></mat-datepicker>\n      </mat-form-field>\n\n      <mat-form-field class=\"date-picker\">\n        <mat-label>Returning</mat-label>\n        <input matInput [matDatepicker]=\"picker2\" [disabled]=\"disableEdit\" [(ngModel)]=\"flightsQuery.returnDate\"\n          [min]=\"minReturnDate\" (dateChange)=\"validateQuery()\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n        <mat-datepicker #picker2></mat-datepicker>\n      </mat-form-field>\n\n      <button mat-flat-button color=\"primary\" [disabled]=\"disableSearch || loadingData\"\n        (click)=\"initiateSearch()\">\n        <mat-icon *ngIf=\"!loadingData \">search</mat-icon>\n        <mat-progress-spinner mode=\"indeterminate\" diameter=17 class=\"flights-search-spinner\"\n          *ngIf=\"loadingData\"></mat-progress-spinner>\n        Find flights\n      </button>\n\n    </div>\n\n  </div>\n  <!-- end of flights search input panel -->\n\n  <!-- welcome card with a notice -->\n  <mat-card class=\"welcome-info\" *ngIf=\"!disableEdit && !loadingData && !flightsOffers\" [@fadeInOut]>\n    Please fill \n    <a href=\"https://developers.amadeus.com/get-started/get-started-with-self-service-apis-335\" target=\"_blank\">Amadeus API</a> \n    key & secret or toggle API emulation in \n    <mat-icon inline aria-label=\"Settings\">settings</mat-icon> <b>Settings</b>\n     before using this demo app.\n  </mat-card>\n  <!-- end of welcome card with a notice -->\n\n  <!-- search results -->\n  <div class=\"results-wrapper\" fxLayout=\"row\" fxLayout.xs=\"column\" fxFlexFill>\n\n    <!-- flights offers panel 60% -->\n    <div fxFlex=\"60\" class=\"sec2\">\n\n      <div *ngIf=\"flightsOffers\" [@fadeInOut]>\n        <mat-card class=\"offer-card\" *ngFor=\"let offer of flightsOffers\">\n\n          <mat-card-header>\n            <mat-card-title-group>\n              <mat-card-title>{{offer.price.grandTotal}}</mat-card-title>\n              <mat-card-subtitle>{{offer.price.currency}}</mat-card-subtitle>\n            </mat-card-title-group>\n            <mat-card-title-group>\n              <mat-card-title>{{formatAirlines(offer.validatingAirlineCodes, flightsDictionaries.carriers)}}\n              </mat-card-title>\n            </mat-card-title-group>\n          </mat-card-header>\n\n          <mat-card-content>\n\n            <mat-accordion multi=\"true\" [@.disabled]=\"true\">\n              <mat-expansion-panel *ngFor=\"let itinerary of offer.itineraries; index as i;\">\n                <mat-expansion-panel-header class=\"right-aligned-header\">\n                  <mat-panel-title>\n                    {{i == 1 ? 'Return flight' : 'Departure flight'}}\n                  </mat-panel-title>\n                  <mat-panel-description>\n                    <mat-icon color=\"primary\" inline>schedule</mat-icon>\n                    {{itinerary.duration | moment: 'duration' : 'HH:mm'}}\n                  </mat-panel-description>\n                </mat-expansion-panel-header>\n\n                <table mat-table [dataSource]=\"itinerary.segments\" class=\"mat-elevation-z8\">\n\n                  <ng-container matColumnDef=\"departure\">\n                    <th mat-header-cell *matHeaderCellDef> From </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.departure.iataCode}} </td>\n                  </ng-container>\n\n                  <ng-container matColumnDef=\"arrival\">\n                    <th mat-header-cell *matHeaderCellDef> To </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.arrival.iataCode}} </td>\n                  </ng-container>\n\n                  <ng-container matColumnDef=\"duration\">\n                    <th mat-header-cell *matHeaderCellDef> Duration </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.duration | moment: 'duration' : 'HH:mm'}} </td>\n                  </ng-container>\n\n                  <ng-container matColumnDef=\"departureAt\">\n                    <th mat-header-cell *matHeaderCellDef> Departure </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.departure.at | moment: 'date' : 'LT'}} </td>\n                  </ng-container>\n\n                  <ng-container matColumnDef=\"arrivalAt\">\n                    <th mat-header-cell *matHeaderCellDef> Arrival </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.arrival.at | moment: 'date' : 'LT'}} </td>\n                  </ng-container>\n\n                  <tr mat-header-row\n                    *matHeaderRowDef=\"['departure', 'arrival', 'duration', 'departureAt', 'arrivalAt']\"></tr>\n                  <tr mat-row\n                    *matRowDef=\"let row; columns: ['departure', 'arrival', 'duration', 'departureAt', 'arrivalAt'];\">\n                  </tr>\n                </table>\n              </mat-expansion-panel>\n            </mat-accordion>\n          </mat-card-content>\n        </mat-card>\n      </div>\n    </div>\n    <!-- end of flights offers panel 60% -->\n\n    <!-- location and security score panel 40% -->\n    <div fxFlex=\"40\" class=\"sec3\">\n      <div *ngIf=\"locationData && flightsOffers\" [@fadeInOut]>\n        <mat-card class=\"location-card\">\n          <mat-card-header>\n            <mat-card-title-group>\n              <mat-card-title>{{locationData.address.cityName}}</mat-card-title>\n              <mat-card-subtitle *ngIf=\"safetyScore\">{{checkRiskLevel(safetyScore.overall)}}</mat-card-subtitle>\n            </mat-card-title-group>\n            <mat-card-title-group *ngIf=\"safetyScore\" [ngClass]=\"applyCSSClass('text', safetyScore.overall)\">\n              <mat-card-title class=\"score-title\">{{safetyScore.overall}}</mat-card-title>\n            </mat-card-title-group>\n          </mat-card-header>\n\n          <!-- safety score data -->\n          <mat-divider *ngIf=\"safetyScore || ( !foundSafetyData && foundSafetyData !== null )\" [@fadeInOut]>\n          </mat-divider>\n          <mat-card-content>\n\n            <div class=\"no-safety-data\" *ngIf=\"!foundSafetyData && foundSafetyData !== null\" [@fadeInOut]>\n              No safety data available. Try using New York, London, Barcelona or Berlin as destination\n            </div>\n\n            <div class=\"scores-wrapper\" fxLayout=\"coluumn wrap\" *ngIf=\"safetyScore\" [@fadeInOut]>\n\n              <div fxFlex=\"33\" *ngFor=\"let score of safetyScoreSettings\">\n                <mat-icon color=\"primary\" inline aria-label=\"score.title\">{{score.icon}}</mat-icon>\n                <p>\n                  {{score.title}}\n                </p>\n                <span [ngClass]=\"applyCSSClass('border', safetyScore[score.locator])\">\n                  {{safetyScore[score.locator]}}\n                </span>\n              </div>\n            </div>\n\n          </mat-card-content>\n          <!-- end of safety score data -->\n        </mat-card>\n      </div>\n    </div>\n    <!-- end of location and security score panel 40% -->\n\n  </div>\n  <!-- end of search results -->\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SafetyScore } from '../../api-safety';\nimport { FlightOffer, CarrierEntry, Dictionaries } from '../../api-flights';\nimport { Location } from 'api-locations';\nimport { AmadeusService } from '../app/services/amadeus.service';\nimport { DatabaseService } from '../app/services/database.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Сredentials } from './models/credentials';\nimport { SafetyScoreParameters } from './models/safety-score-params'\nimport { FlightsQuery } from './models/flights-query';\nimport { SettingsDialog } from './modals/settings/settings.component';\nimport { DatabaseDialog } from './modals/database/database.component';\nimport moment from 'moment';\nimport { defaultSearchParams, searchParamsMock } from './mocks/search-params';\nimport { AlertService } from './services/alert.service';\nimport { trigger, style, state, animate, transition } from '@angular/animations';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  // animations for showing/hiding panels\n  animations: [\n    trigger('fadeInOut', [\n        state('in', style({opacity: 1})),\n        transition(':enter', [\n          style({opacity: 0}),\n          animate(250)\n        ]),\n        transition(':leave', [\n          animate(250, style({opacity: 0}))\n        ])\n    ])\n  ]\n})\nexport class AppComponent implements OnInit {\n\n  // search params\n  flightsQuery: FlightsQuery = defaultSearchParams;\n\n  // support of search params validation\n  disableEdit: boolean = false;\n  disableSearch: boolean = true;\n  minDepartureDate: Date = new Date();\n  minReturnDate: Date = moment(this.minDepartureDate).add(1, 'days').toDate();\n\n  // data from Amadeus APIs\n  flightsOffers: FlightOffer = null;\n  flightsDictionaries: Dictionaries = null; \n  safetyScore: SafetyScore = null;\n  locationData: Location = null;\n  \n  // variable to reflect data loading process during API calls \n  loadingData: boolean = false;\n\n  // indication if safety data is available\n  foundSafetyData: boolean = null;\n\n  // safety score titles, variable locators and assotiated icons\n  safetyScoreSettings: SafetyScoreParameters[] = [\n    { title: 'Women\\'s safety', locator: 'women', icon: 'face' },\n    { title: 'Physical harm', locator: 'physicalHarm', icon: 'sports_kabaddi' },\n    { title: 'Theft', locator: 'theft', icon: 'account_balance_wallet' },\n    { title: 'Political freedom', locator: 'politicalFreedom', icon: 'account_balance' },\n    { title: 'Health & Medical', locator: 'medical', icon: 'healing' },\n    { title: 'LGBTQ Safety', locator: 'lgbtq', icon: 'looks' },\n  ]\n\n  constructor(public amadeusApi: AmadeusService, public databaseApi: DatabaseService, public dialog: MatDialog, public alerts: AlertService) { }\n\n  // opening settings modal window\n  openSettingsDialog(): void {\n    console.debug('-- opening settings dialog');\n    const dialogRef = this.dialog.open(SettingsDialog, {\n      width: '500px',\n      data: { credentials: this.amadeusApi.verifyApiCredentials(), local: this.amadeusApi.verifyRunningLocal(), logs: this.databaseApi.verifyDbLogs() }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == undefined) {\n        console.debug('-- settings dialog was closed, no updates saved');\n      } else {\n        console.debug('-- settings dialog was closed, syncing credentials');\n\n        // syncing updates from settings dialog\n        this.amadeusApi.verifyApiCredentials(result.credentials.key, result.credentials.secret);\n        this.resetParams(result.local);\n        this.databaseApi.verifyDbLogs(result.logs);\n      }\n    });\n  }\n\n   // opening database modal window\n   openDatabaseDialog(): void {\n    console.debug('-- opening database dialog');\n    const dialogRef = this.dialog.open(DatabaseDialog, {\n      width: '700px',\n      data: { credentials: this.databaseApi.verifyDbCredentials() }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == undefined) {\n        console.debug('-- database dialog was closed, no updates saved');\n      } else {\n        console.debug('-- database dialog was closed, syncing credentials');\n\n        // syncing updates from settings dialog\n        this.databaseApi.verifyDbCredentials(result.credentials.key, result.credentials.secret);\n      }\n    });\n  }\n\n  // color coding safety scores \n  applyCSSClass(spec, value) {\n    let prefix = '';\n    if (spec == 'text') prefix = 'score-';\n    if (spec == 'border') prefix = 'border-score-';\n\n    if (value <= 33) return prefix + 'low';\n    if (value > 33 && value <= 66) return prefix + 'average';\n    if (value > 66) return prefix + 'high';\n\n  }\n\n  // providing risk level based on overall safety score\n  checkRiskLevel(value) {\n    if (value <= 33) return 'Low risk';\n    if (value > 33 && value <= 66) return 'Average risk';\n    if (value > 66) return 'High risk';\n  }\n\n  // function to clear/fill search params \n  resetParams(value?: boolean) {\n\n    let newValue = value;\n    if (newValue == null) {\n      newValue = this.amadeusApi.verifyRunningLocal();\n    } else {\n      if (this.amadeusApi.verifyRunningLocal() !== newValue) {\n\n        console.debug('-- setting running local setting to ', newValue)\n        this.amadeusApi.verifyRunningLocal(newValue);\n      }\n    }\n\n    this.disableEdit = newValue;\n    this.disableSearch = !newValue;\n\n    // filling search params - mocks if running local was selected\n    this.flightsQuery = (newValue) ? searchParamsMock : defaultSearchParams;\n\n    this.cleanData();\n  }\n\n  // cleaning search data\n  cleanData() {\n    this.loadingData = false;\n\n    this.flightsOffers = null;\n    this.flightsDictionaries = null;\n    this.locationData = null;\n    this.safetyScore = null;\n    this.foundSafetyData = null;\n  }\n\n  // input data validator for flights search params to disable or enable search button\n  validateQuery() {\n    if (this.flightsQuery.departureDate) this.minReturnDate = moment(this.flightsQuery.departureDate).add(1, 'days').toDate();\n\n    // disable search button if some fields are not filled\n    if (this.flightsQuery.originLocationCode && this.flightsQuery.destinationLocationCode && this.flightsQuery.departureDate && this.flightsQuery.returnDate) {\n      this.disableSearch = false;\n    } else {\n      this.disableSearch = true;\n    }\n  }\n\n  // function to match airlines code from itinerary with airlines code from dictionaries to provide airline name\n  formatAirlines(airlineCodes: any[], carriers: CarrierEntry) {\n    let airlinesList = [];\n    airlineCodes.forEach(airline => airlinesList.push(carriers[airline]))\n    return airlinesList.toString();\n  }\n\n  // initiate search for flights\n  initiateSearch() {\n\n    // cleaning previous search or error data\n    this.cleanData();\n    \n    this.loadingData = true;\n    // STEP 1 - transform departure city name into IATA code using Amadeus location API\n    this.amadeusApi.getLocationDetails(this.flightsQuery.originLocationCode).subscribe(originLocation => {\n      console.debug('-- received origin location details', originLocation);\n      this.flightsQuery.originLocationCode = originLocation.data[0].iataCode;\n\n      // STEP 2 - transform destination city name into IATA code using Amadeus location API\n      this.amadeusApi.getLocationDetails(this.flightsQuery.destinationLocationCode).subscribe(destinationLocation => {\n        console.debug('-- received destination location details', destinationLocation);\n\n           this.locationData = destinationLocation.data[0];\n\n        this.flightsQuery.destinationLocationCode = this.locationData.iataCode;\n\n        // STEP 3 - search for flight offers using obtained location IATA codes and dates provided by user\n        this.amadeusApi.searchFlights(this.flightsQuery).subscribe(flightsData => {\n\n          this.flightsOffers = flightsData.data;\n          this.flightsDictionaries = flightsData.dictionaries;\n          console.debug('-- received flights offers', flightsData);\n\n          // safety data can be empty cause it is a test api, so can display what we have so far\n          this.loadingData = false;\n\n          // STEP 4 - get location safety score data using Amadeus APIs\n          this.amadeusApi.getSafetyDetails(this.locationData.geoCode.latitude, this.locationData.geoCode.longitude).subscribe(safetyData => {\n            console.debug('-- received safety data', safetyData);\n            if (safetyData.data.length > 0) {\n              this.safetyScore = safetyData.data[0].safetyScores;\n            } else {\n              this.foundSafetyData = false;\n            }\n          })\n\n          // STEP 5 (OPTIONAL) - log query in DB\n          if (this.databaseApi.verifyDbLogs()) {\n            this.databaseApi.submitData(this.flightsQuery).subscribe(res => {\n              console.debug('-- submitted query log to db', res)\n            });\n          };\n          \n        })\n      })\n    })\n  }\n\n  ngOnInit() {}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ErrorHandler } from '@angular/core';\n\n// additional modules\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material/snack-bar';\n\n// Amadeus APIs\nimport { ApiModule as SafetyApiModule } from '../../api-safety';\nimport { ApiModule as FlightsApiModule } from '../../api-flights';\nimport { ApiModule as LocationsApiModule } from '../../api-locations';\n\n// angular material modules\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatPaginatorModule } from '@angular/material/paginator';\n\n// custom things\nimport { OauthInterceptor } from './interceptors/oauth.interceptor';\nimport { SettingsDialog } from './modals/settings/settings.component';\nimport { DatabaseDialog } from './modals/database/database.component';\nimport { MomentPipe } from './pipes/moment.pipe';\nimport { ErrorHandlerService } from './services/error-handler.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SettingsDialog,\n    DatabaseDialog,\n    MomentPipe,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    SafetyApiModule,\n    FlightsApiModule,\n    LocationsApiModule,\n    HttpClientModule,\n    FlexLayoutModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatSlideToggleModule,\n    MatExpansionModule,\n    MatCardModule,\n    MatDividerModule,\n    MatBadgeModule,\n    MatTableModule,\n    MatGridListModule,\n    MatSnackBarModule\n  ],\n  providers: [\n    MatDatepickerModule,\n    { provide: HTTP_INTERCEPTORS, useClass: OauthInterceptor, multi: true },\n    { provide: ErrorHandler, useClass: ErrorHandlerService },\n    { provide: MAT_SNACK_BAR_DEFAULT_OPTIONS, useValue: {duration: 5000, verticalPosition: 'bottom', horizontalPosition: 'center'} }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { AmadeusService } from '../services/amadeus.service';\nimport 'rxjs/add/operator/mergeMap';\nimport { flightsSearchMock } from '../mocks/flights-search';\nimport { originLocationSearchMock, destinationLocationSearchMock } from '../mocks/locations-search';\nimport { safetyLocationSearchMock } from '../mocks/safety-search';\nimport { AlertService } from '../services/alert.service';\n\n\n@Injectable()\nexport class OauthInterceptor implements HttpInterceptor {\n\n  constructor(private amadeusApi: AmadeusService, private alerts: AlertService) {}\n\n  // intercepting every HttpRequest\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    // check if it goes to Amadeus APIs\n    if (request.url.includes('/safety/safety-rated-locations') || request.url.includes('/shopping/flight-offers' ) || request.url.includes('/reference-data/locations' )) {\n\n      // check if application running local (mocking web services)\n      if (!this.amadeusApi.verifyRunningLocal()) {\n        console.debug('-- intercepted Amadeus API request, looking for access_token')\n\n        // obtaining and adding access token to the request\n        return this.amadeusApi.provideToken().mergeMap(accessToken => {\n          console.debug('-- injecting access_token into Amadeus API request')\n          request = request.clone({\n            setHeaders: {\n              'Authorization': 'Bearer ' + accessToken\n            }\n          });      \n  \n          return next.handle(request);\n        })\n      } else {\n\n        // application is running local, replying with local data instead of real API calls\n        if (request.urlWithParams.includes('/reference-data/locations?subType=CITY&keyword=Chicago') || request.urlWithParams.includes('/reference-data/locations?subType=CITY&keyword=CHI')) return of(new HttpResponse<any>({ status: 200, body: originLocationSearchMock }));\n        if (request.urlWithParams.includes('/reference-data/locations?subType=CITY&keyword=New%20York') || request.urlWithParams.includes('/reference-data/locations?subType=CITY&keyword=NYC')) return of(new HttpResponse({ status: 200, body: destinationLocationSearchMock }));\n        if (request.url.includes('/shopping/flight-offers')) return of(new HttpResponse({ status: 200, body: flightsSearchMock }));\n        if (request.url.includes('/safety/safety-rated-locations')) return of(new HttpResponse({ status: 200, body: safetyLocationSearchMock }));\n      }\n    } else {\n      return next.handle(request);\n    }\n  }\n}\n","// mock of flights search using Amadeus APIs\n\nexport const flightsSearchMock = {\n    \"meta\" : {\n      \"count\" : 1,\n      \"links\" : {\n        \"self\" : \"https://test.api.amadeus.com/v2/shopping/flight-offers?originLocationCode=CHI&destinationLocationCode=NYC&departureDate=2021-03-01&returnDate=2021-03-19&adults=1&max=1\"\n      }\n    },\n    \"data\" : [ {\n      \"type\" : \"flight-offer\",\n      \"id\" : \"1\",\n      \"source\" : \"GDS\",\n      \"instantTicketingRequired\" : false,\n      \"nonHomogeneous\" : false,\n      \"oneWay\" : false,\n      \"lastTicketingDate\" : \"2020-08-19\",\n      \"numberOfBookableSeats\" : 9,\n      \"itineraries\" : [ {\n        \"duration\" : \"PT2H10M\",\n        \"segments\" : [ {\n          \"departure\" : {\n            \"iataCode\" : \"ORD\",\n            \"terminal\" : \"2\",\n            \"at\" : \"2021-03-01T18:45:00\"\n          },\n          \"arrival\" : {\n            \"iataCode\" : \"LGA\",\n            \"terminal\" : \"D\",\n            \"at\" : \"2021-03-01T21:55:00\"\n          },\n          \"carrierCode\" : \"DL\",\n          \"number\" : \"1381\",\n          \"aircraft\" : {\n            \"code\" : \"221\"\n          },\n          \"operating\" : {\n            \"carrierCode\" : \"DL\"\n          },\n          \"duration\" : \"PT2H10M\",\n          \"id\" : \"1\",\n          \"numberOfStops\" : 0,\n          \"blacklistedInEU\" : false\n        } ]\n      }, {\n        \"duration\" : \"PT2H38M\",\n        \"segments\" : [ {\n          \"departure\" : {\n            \"iataCode\" : \"LGA\",\n            \"terminal\" : \"D\",\n            \"at\" : \"2021-03-19T14:10:00\"\n          },\n          \"arrival\" : {\n            \"iataCode\" : \"ORD\",\n            \"terminal\" : \"2\",\n            \"at\" : \"2021-03-19T15:48:00\"\n          },\n          \"carrierCode\" : \"DL\",\n          \"number\" : \"1518\",\n          \"aircraft\" : {\n            \"code\" : \"221\"\n          },\n          \"operating\" : {\n            \"carrierCode\" : \"DL\"\n          },\n          \"duration\" : \"PT2H38M\",\n          \"id\" : \"2\",\n          \"numberOfStops\" : 0,\n          \"blacklistedInEU\" : false\n        } ]\n      } ],\n      \"price\" : {\n        \"currency\" : \"EUR\",\n        \"total\" : \"171.10\",\n        \"base\" : \"154.00\",\n        \"fees\" : [ {\n          \"amount\" : \"0.00\",\n          \"type\" : \"SUPPLIER\"\n        }, {\n          \"amount\" : \"0.00\",\n          \"type\" : \"TICKETING\"\n        } ],\n        \"grandTotal\" : \"171.10\"\n      },\n      \"pricingOptions\" : {\n        \"fareType\" : [ \"PUBLISHED\" ],\n        \"includedCheckedBagsOnly\" : false\n      },\n      \"validatingAirlineCodes\" : [ \"DL\" ],\n      \"travelerPricings\" : [ {\n        \"travelerId\" : \"1\",\n        \"fareOption\" : \"STANDARD\",\n        \"travelerType\" : \"ADULT\",\n        \"price\" : {\n          \"currency\" : \"EUR\",\n          \"total\" : \"171.10\",\n          \"base\" : \"154.00\"\n        },\n        \"fareDetailsBySegment\" : [ {\n          \"segmentId\" : \"1\",\n          \"cabin\" : \"ECONOMY\",\n          \"fareBasis\" : \"VA7SB4BQ\",\n          \"brandedFare\" : \"BASICECON\",\n          \"class\" : \"E\",\n          \"includedCheckedBags\" : {\n            \"quantity\" : 0\n          }\n        }, {\n          \"segmentId\" : \"2\",\n          \"cabin\" : \"ECONOMY\",\n          \"fareBasis\" : \"XAVQA0BQ\",\n          \"brandedFare\" : \"BASICECON\",\n          \"class\" : \"E\",\n          \"includedCheckedBags\" : {\n            \"quantity\" : 0\n          }\n        } ]\n      } ]\n    },\n  \n    {\n      \"type\": \"flight-offer\",\n      \"id\": \"1\",\n      \"source\": \"GDS\",\n      \"instantTicketingRequired\": false,\n      \"nonHomogeneous\": false,\n      \"oneWay\": false,\n      \"lastTicketingDate\": \"2020-08-21\",\n      \"numberOfBookableSeats\": 9,\n      \"itineraries\": [\n        {\n          \"duration\": \"PT2H3M\",\n          \"segments\": [\n            {\n              \"departure\": {\n                \"iataCode\": \"ORD\",\n                \"terminal\": \"1\",\n                \"at\": \"2021-03-01T09:00:00\"\n              },\n              \"arrival\": {\n                \"iataCode\": \"LGA\",\n                \"terminal\": \"B\",\n                \"at\": \"2021-03-01T12:03:00\"\n              },\n              \"carrierCode\": \"UA\",\n              \"number\": \"2116\",\n              \"aircraft\": {\n                \"code\": \"320\"\n              },\n              \"operating\": {\n                \"carrierCode\": \"UA\"\n              },\n              \"duration\": \"PT2H3M\",\n              \"id\": \"1\",\n              \"numberOfStops\": 0,\n              \"blacklistedInEU\": false\n            }\n          ]\n        },\n        {\n          \"duration\": \"PT2H24M\",\n          \"segments\": [\n            {\n              \"departure\": {\n                \"iataCode\": \"LGA\",\n                \"terminal\": \"B\",\n                \"at\": \"2021-03-19T07:00:00\"\n              },\n              \"arrival\": {\n                \"iataCode\": \"ORD\",\n                \"terminal\": \"1\",\n                \"at\": \"2021-03-19T08:24:00\"\n              },\n              \"carrierCode\": \"UA\",\n              \"number\": \"1958\",\n              \"aircraft\": {\n                \"code\": \"319\"\n              },\n              \"operating\": {\n                \"carrierCode\": \"UA\"\n              },\n              \"duration\": \"PT2H24M\",\n              \"id\": \"2\",\n              \"numberOfStops\": 0,\n              \"blacklistedInEU\": false\n            }\n          ]\n        }\n      ],\n      \"price\": {\n        \"currency\": \"EUR\",\n        \"total\": \"217.10\",\n        \"base\": \"200.00\",\n        \"fees\": [\n          {\n            \"amount\": \"0.00\",\n            \"type\": \"SUPPLIER\"\n          },\n          {\n            \"amount\": \"0.00\",\n            \"type\": \"TICKETING\"\n          }\n        ],\n        \"grandTotal\": \"217.10\"\n      },\n      \"pricingOptions\": {\n        \"fareType\": [\n          \"PUBLISHED\"\n        ],\n        \"includedCheckedBagsOnly\": false\n      },\n      \"validatingAirlineCodes\": [\n        \"UA\"\n      ],\n      \"travelerPricings\": [\n        {\n          \"travelerId\": \"1\",\n          \"fareOption\": \"STANDARD\",\n          \"travelerType\": \"ADULT\",\n          \"price\": {\n            \"currency\": \"EUR\",\n            \"total\": \"217.10\",\n            \"base\": \"200.00\"\n          },\n          \"fareDetailsBySegment\": [\n            {\n              \"segmentId\": \"1\",\n              \"cabin\": \"ECONOMY\",\n              \"fareBasis\": \"KAA4PHDN\",\n              \"brandedFare\": \"ECONOMY\",\n              \"class\": \"K\",\n              \"includedCheckedBags\": {\n                \"quantity\": 0\n              }\n            },\n            {\n              \"segmentId\": \"2\",\n              \"cabin\": \"ECONOMY\",\n              \"fareBasis\": \"KAA4PHDN\",\n              \"brandedFare\": \"ECONOMY\",\n              \"class\": \"K\",\n              \"includedCheckedBags\": {\n                \"quantity\": 0\n              }\n            }\n          ]\n        }\n      ]\n    } ],\n    \"dictionaries\" : {\n      \"locations\" : {\n        \"ORD\" : {\n          \"cityCode\" : \"CHI\",\n          \"countryCode\" : \"US\"\n        },\n        \"LGA\" : {\n          \"cityCode\" : \"NYC\",\n          \"countryCode\" : \"US\"\n        }\n      },\n      \"aircraft\" : {\n        \"221\" : \"AIRBUS A220-100\",\n        \"319\": \"AIRBUS A319\",\n        \"320\": \"AIRBUS A320\"\n      },\n      \"currencies\" : {\n        \"EUR\" : \"EURO\"\n      },\n      \"carriers\" : {\n        \"DL\" : \"DELTA AIR LINES\",\n        \"UA\": \"UNITED AIRLINES\"\n      }\n    }\n  };\n\n","// mock of locations search using Amadeus APIs\n\nexport const originLocationSearchMock = {\n    \"meta\": {\n        \"count\": 1,\n        \"links\": {\n            \"self\": \"https://test.api.amadeus.com/v1/reference-data/locations?subType=CITY&keyword=Chicago&page%5Blimit%5D=1\"\n        }\n    },\n    \"data\": [\n        {\n            \"type\": \"location\",\n            \"subType\": \"CITY\",\n            \"name\": \"CHICAGO\",\n            \"detailedName\": \"CHICAGO/IL/US\",\n            \"id\": \"CCHI\",\n            \"self\": {\n                \"href\": \"https://test.api.amadeus.com/v1/reference-data/locations/CCHI\",\n                \"methods\": [\n                    \"GET\"\n                ]\n            },\n            \"timeZoneOffset\": \"-05:00\",\n            \"iataCode\": \"CHI\",\n            \"geoCode\": {\n                \"latitude\": 41.85000,\n                \"longitude\": -87.65000\n            },\n            \"address\": {\n                \"cityName\": \"CHICAGO\",\n                \"cityCode\": \"CHI\",\n                \"countryName\": \"UNITED STATES OF AMERICA\",\n                \"countryCode\": \"US\",\n                \"stateCode\": \"IL\",\n                \"regionCode\": \"NAMER\"\n            },\n            \"analytics\": {\n                \"travelers\": {\n                    \"score\": 62\n                }\n            }\n        }\n    ]\n};\n\nexport const destinationLocationSearchMock = {\n    \"meta\": {\n        \"count\": 1,\n        \"links\": {\n            \"self\": \"https://test.api.amadeus.com/v1/reference-data/locations?subType=CITY&keyword=New%20York&page%5Blimit%5D=1\"\n        }\n    },\n    \"data\": [\n        {\n            \"type\": \"location\",\n            \"subType\": \"CITY\",\n            \"name\": \"LAGUARDIA AIRPORT\",\n            \"detailedName\": \"NEW YORK/NY/US\",\n            \"id\": \"CNYC\",\n            \"self\": {\n                \"href\": \"https://test.api.amadeus.com/v1/reference-data/locations/CNYC\",\n                \"methods\": [\n                    \"GET\"\n                ]\n            },\n            \"timeZoneOffset\": \"-04:00\",\n            \"iataCode\": \"NYC\",\n            \"geoCode\": {\n                \"latitude\": 40.71417,\n                \"longitude\": -74.00583\n            },\n            \"address\": {\n                \"cityName\": \"NEW YORK\",\n                \"cityCode\": \"NYC\",\n                \"countryName\": \"UNITED STATES OF AMERICA\",\n                \"countryCode\": \"US\",\n                \"stateCode\": \"NY\",\n                \"regionCode\": \"NAMER\"\n            },\n            \"analytics\": {\n                \"travelers\": {\n                    \"score\": 76\n                }\n            }\n        }\n    ]\n};","// mock of safety score search using Amadeus APIs\n\nexport const safetyLocationSearchMock = {\n    \"data\":[\n       {\n          \"type\":\"safety-rated-location\",\n          \"id\":\"Q930206666\",\n          \"self\":{\n             \"type\":\"https://test.api.amadeus.com/v1/safety/safety-rated-locations/Q930206666\",\n             \"methods\":[\n                \"GET\"\n             ]\n          },\n          \"subType\":\"CITY\",\n          \"name\":\"New York\",\n          \"geoCode\":{\n             \"latitude\":40.755653,\n             \"longitude\":-73.985303\n          },\n          \"safetyScores\":{\n             \"lgbtq\":35,\n             \"medical\":73,\n             \"overall\":39,\n             \"physicalHarm\":30,\n             \"politicalFreedom\":40,\n             \"theft\":27,\n             \"women\":26\n          }\n       }\n    ],\n    \"meta\":{\n       \"count\":79,\n       \"links\":{\n          \"self\":\"https://test.api.amadeus.com/v1/safety/safety-rated-locations?latitude=40.71417\\u0026longitude=-74.00583\\u0026page%5Blimit%5D=1\\u0026radius=20\",\n          \"next\":\"https://test.api.amadeus.com/v1/safety/safety-rated-locations?latitude=40.71417\\u0026longitude=-74.00583\\u0026page%5Blimit%5D=1\\u0026page%5Boffset%5D=1\\u0026radius=20\",\n          \"last\":\"https://test.api.amadeus.com/v1/safety/safety-rated-locations?latitude=40.71417\\u0026longitude=-74.00583\\u0026page%5Blimit%5D=1\\u0026page%5Boffset%5D=79\\u0026radius=20\",\n          \"first\":\"https://test.api.amadeus.com/v1/safety/safety-rated-locations?latitude=40.71417\\u0026longitude=-74.00583\\u0026page%5Blimit%5D=1\\u0026page%5Boffset%5D=0\\u0026radius=20\"\n       }\n    }\n }","// mock of search params for local usage or calling Amadeus APIs\n\nimport moment from 'moment';\n\nexport const searchParamsMock = {\n    originLocationCode: \"Chicago\", \n    destinationLocationCode: \"New York\", \n    departureDate: moment('2021-03-01').toDate(), \n    returnDate: moment('2021-03-19').toDate(), \n    adults: 1,\n    max: 1\n};\n\nexport const defaultSearchParams = {\n    originLocationCode: null, \n    destinationLocationCode: null, \n    departureDate: null, \n    returnDate: null, \n    adults: 1,\n    max: 1\n};","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DatabaseService } from '../../services/database.service';\nimport { Сredentials } from '../../models/credentials';\nimport { LogEntry } from 'src/app/models/log-entry';\nimport { trigger, style, state, animate, transition } from '@angular/animations';\n\n\n@Component({\n  selector: 'app-database',\n  templateUrl: './database.component.html',\n  styleUrls: ['./database.component.css'],\n  // animations for showing/hiding divs\n  animations: [\n    trigger('fadeInOut', [\n        state('in', style({opacity: 1})),\n        transition(':enter', [\n          style({opacity: 0}),\n          animate(250)\n        ]),\n        transition(':leave', [\n          animate(250, style({opacity: 0}))\n        ])\n    ])\n  ]\n})\nexport class DatabaseDialog implements OnInit {\n\n  public dblogs: LogEntry[] = null;\n  public loadingLogsData: boolean = false;\n\n  constructor(public dialogRef: MatDialogRef<DatabaseDialog>, \n    @Inject(MAT_DIALOG_DATA) public data: { credentials: Сredentials }, \n    public databaseApi: DatabaseService) { }\n  \n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  // loading data using database service\n  loadLogs() {\n    this.loadingLogsData = true;\n    this.databaseApi.loadData().subscribe(data => {\n      console.debug('-- received logs from database', data);\n      this.dblogs = data;\n      this.loadingLogsData = false;\n    })\n  }\n\n  // removing data using database service\n  clearLogs() {\n    this.loadingLogsData = true;\n    this.databaseApi.removeData().subscribe(res => {\n      console.debug('-- cleared logs database', res);\n      this.loadLogs();\n    });\n  }\n\n  ngOnInit(): void {\n    this.loadLogs();\n  }\n\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Сredentials } from '../../models/credentials';\n\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsDialog implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<SettingsDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: { credentials: Сredentials, local: boolean, logs: boolean}) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as moment from 'moment';\n\n@Pipe({\n  name: 'moment'\n})\nexport class MomentPipe implements PipeTransform {\n\n  transform(date, type, format) {\n\n    // in case of duration type, provide custom duration string output\n    if (type == \"duration\") {\n      let duration = moment.duration(date);\n      return(duration.hours()+\" hours \"+duration.minutes()+\" minutes \");\n    } else {\n\n      // otherwise provide date string output based on requested format\n      return moment(date).format(format);\n    }\n  }\n\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Subject } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  private resetSubject = new Subject<any>();\n  initiateReset = this.resetSubject.asObservable();\n\n  constructor(private alertBar: MatSnackBar, private zone: NgZone) { }\n\n  showAlert(message) {\n\n    // NgZone workaround required to avoid showing alert twice \n    this.zone.run(() => {\n      this.alertBar.open(message); \n\n      // way of calling a function in component to clear up search params and data in case error has occured\n      this.resetSubject.next();\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { SecurityService } from '../../../api-safety';\nimport { FlightsService } from '../../../api-flights';\nimport { LocationsService } from '../../../api-locations';\nimport { SafetyService } from '../../../api-safety';\nimport { FlightsQuery } from '../models/flights-query';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/fromPromise';\nimport { Сredentials } from '../models/credentials';\nimport moment from 'moment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AmadeusService {\n\n  private accessToken: string = null;\n\n  private runningLocal: boolean = false;\n\n  // API credentials to use Amadeus API. Obtain yours by following the instructions https://developers.amadeus.com/get-started/get-started-with-self-service-apis-335\n  private apiCredentials: Сredentials = {\n    key: null,\n    secret: null\n  }\n\n  constructor(private securityApi: SecurityService, private flightsApi: FlightsService, private locationsApi: LocationsService, private safetyApi: SafetyService) { }\n\n  // function to update or just provide a status of running local param\n  public verifyRunningLocal(value?: boolean) {\n    if (value!== null && value !== undefined) {\n          this.runningLocal = value;\n          return this.runningLocal;\n    } else return this.runningLocal;\n  } \n\n  \n  // function to update or just provide credentials to Amadeus APIs\n  public verifyApiCredentials(api_key?, api_secret?) {\n    if (api_key && api_secret) {\n          this.apiCredentials = {\n            key: api_key,\n            secret: api_secret\n          };\n          return this.apiCredentials;\n    } else return this.apiCredentials;\n  } \n\n  // function to obtain access token that is required to make any data call to Amadeus APIs\n  public obtainToken(): Promise<any> {\n\n    return new Promise((resolve, reject) => {\n      this.securityApi.getAccessToken('client_credentials', this.apiCredentials.key, this.apiCredentials.secret).subscribe(value => {\n        if (\"access_token\" in value) {\n          resolve(value);\n        } else {\n          reject();\n        }\n      })\n    })\n  }\n\n  // function to provide saved token or call obtain function and get a new one\n  public provideToken(): Observable<any> {\n    return Observable.fromPromise(new Promise((resolve, reject) => {\n      if (this.accessToken) {\n        console.debug('-- found saved access_token')\n        resolve(this.accessToken);\n      } else {\n        console.debug('-- requesting new access_token from Amadeus')\n        this.obtainToken().then(\n          value => {\n            this.accessToken = value.access_token\n            console.debug('-- access_token received')\n            resolve(this.accessToken);\n          },\n          error => {\n            console.debug('!-- cannot get access_token', error)\n            reject();\n          }\n        )\n      }\n    }))\n  }\n\n  // connection with generated Amadeus flights api to pre-fill params and format dates\n  searchFlights(flightsQuery: FlightsQuery) {\n    return this.flightsApi.getFlightOffers(flightsQuery.originLocationCode, flightsQuery.destinationLocationCode, moment(flightsQuery.departureDate).format('YYYY-MM-DD'), moment(flightsQuery.returnDate).format('YYYY-MM-DD'), flightsQuery.adults, flightsQuery.max);\n  }\n\n  // connection with generated Amadeus locations api to pre-fill params and format dates\n  getLocationDetails(cityName) {\n    return this.locationsApi.getAirportCitySearch(['CITY'], cityName, null, 1);\n  }\n\n  // connection with generated Amadeus safety score api to pre-fill params and format dates\n  getSafetyDetails(lat, long) {\n    return this.safetyApi.getSafetyRanking(lat, long, 20, 1);\n  }\n}","import { Injectable } from '@angular/core';\nimport { Сredentials } from '../models/credentials';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport moment from 'moment';\nimport { LogEntry } from '../models/log-entry';\nimport { FlightsQuery } from '../models/flights-query';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n\n  private dbLogs: boolean = false;\n\n  // basic auth credentials for db access through node runtime api\n  private dbCredentials: Сredentials = {\n    key: 'secret_user',\n    secret: 'secret_password'\n  }\n\n  constructor(private http: HttpClient) {}\n\n  // function to update or just provide a status of running local param\n  public verifyDbLogs(value?: boolean) {\n    if (value!== null && value !== undefined) {\n          this.dbLogs = value;\n          return this.dbLogs;\n    } else return this.dbLogs;\n  }\n\n  // function to update or just provide credentials to Amadeus APIs\n  public verifyDbCredentials(user_key?, user_secret?) {\n    if (user_key && user_secret) {\n        this.dbCredentials = {\n          key: user_key,\n          secret: user_secret\n        };\n        return this.dbCredentials;\n    } else return this.dbCredentials;\n  } \n\n  // function to generate HTTP request options\n  private getHttpOptions(setType?) {\n    let headers = new HttpHeaders();\n    headers = headers.append(\"Authorization\", \"Basic \" + btoa(`${this.dbCredentials.key}:${this.dbCredentials.secret}`));\n    // required not to show in-browser login window in case of failed auth\n    headers = headers.append(\"No-Auth-Challenge\", \"true\");\n    if (setType) headers = headers.append(\"Content-Type\", \"application/json\");\n\n    return {\n\t\t\theaders: headers\n\t\t}\n  }\n\n  // function to load logs from database\n  public loadData() {\n\t\treturn this.http.get<LogEntry[]>('/database/getData', this.getHttpOptions());\n  }\n  \n  // function to submit log to database\n  public submitData(data: FlightsQuery) {\n\t\treturn this.http.post('/database/postData', { timestamp: moment().format(), query: data }, this.getHttpOptions(true));\n  }\n  \n  // function to clear all data in db\n  public removeData() {\n    return this.http.get('/database/removeData', this.getHttpOptions());\n\t}\n\n}","import { Injectable } from '@angular/core';\nimport { ErrorHandler } from '@angular/core';\nimport { AlertService } from '../services/alert.service';\n\n@Injectable()\nexport class ErrorHandlerService implements ErrorHandler {\n\n  constructor(private alerts: AlertService) {}\n\n  handleError(error) {\n\n    // logging error and showing on-screen alert   \n    console.error('An error has occured', error);\n    this.alerts.showAlert('An error has occured. Check console for details.');\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}